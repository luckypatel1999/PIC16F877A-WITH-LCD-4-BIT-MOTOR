

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun May 01 11:44:17 2022

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.44
    15                           ; Generated 14/09/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0007                     _PORTC	set	7
   109  0006                     _PORTB	set	6
   110  0008                     _PORTD	set	8
   111  0086                     _TRISB	set	134
   112  0087                     _TRISC	set	135
   113  0088                     _TRISD	set	136
   114                           
   115                           	psect	strings
   116  0003                     __pstrings:	
   117  0003                     stringtab:	
   118  0003                     __stringtab:	
   119  0003                     stringcode:	
   120                           ;	String table - string pointers are 1 byte each
   121                           
   122  0003                     stringdir:	
   123  0003  3000               	movlw	high stringdir
   124  0004  008A               	movwf	10
   125  0005  0804               	movf	4,w
   126  0006  0A84               	incf	4,f
   127  0007  0782               	addwf	2,f
   128  0008                     __stringbase:	
   129  0008  3400               	retlw	0
   130  0009                     __end_of__stringtab:	
   131  0009                     STR_4:	
   132  0009  3470               	retlw	112	;'p'
   133  000A  3472               	retlw	114	;'r'
   134  000B  3465               	retlw	101	;'e'
   135  000C  3473               	retlw	115	;'s'
   136  000D  3473               	retlw	115	;'s'
   137  000E  3420               	retlw	32	;' '
   138  000F  3434               	retlw	52	;'4'
   139  0010  3420               	retlw	32	;' '
   140  0011  3466               	retlw	102	;'f'
   141  0012  3469               	retlw	105	;'i'
   142  0013  3472               	retlw	114	;'r'
   143  0014  3473               	retlw	115	;'s'
   144  0015  3474               	retlw	116	;'t'
   145  0016  3420               	retlw	32	;' '
   146  0017  3452               	retlw	82	;'R'
   147  0018  3465               	retlw	101	;'e'
   148  0019  3476               	retlw	118	;'v'
   149  001A  3465               	retlw	101	;'e'
   150  001B  3472               	retlw	114	;'r'
   151  001C  3473               	retlw	115	;'s'
   152  001D  3465               	retlw	101	;'e'
   153  001E  3420               	retlw	32	;' '
   154  001F  3432               	retlw	50	;'2'
   155  0020  3420               	retlw	32	;' '
   156  0021  346E               	retlw	110	;'n'
   157  0022  3464               	retlw	100	;'d'
   158  0023  3420               	retlw	32	;' '
   159  0024  3400               	retlw	0
   160  0025                     STR_1:	
   161  0025  3470               	retlw	112	;'p'
   162  0026  3472               	retlw	114	;'r'
   163  0027  3465               	retlw	101	;'e'
   164  0028  3473               	retlw	115	;'s'
   165  0029  3473               	retlw	115	;'s'
   166  002A  3420               	retlw	32	;' '
   167  002B  3431               	retlw	49	;'1'
   168  002C  3420               	retlw	32	;' '
   169  002D  3466               	retlw	102	;'f'
   170  002E  346F               	retlw	111	;'o'
   171  002F  3472               	retlw	114	;'r'
   172  0030  3477               	retlw	119	;'w'
   173  0031  3461               	retlw	97	;'a'
   174  0032  3472               	retlw	114	;'r'
   175  0033  3464               	retlw	100	;'d'
   176  0034  3400               	retlw	0
   177  0035                     STR_2:	
   178  0035  3470               	retlw	112	;'p'
   179  0036  3472               	retlw	114	;'r'
   180  0037  3465               	retlw	101	;'e'
   181  0038  3473               	retlw	115	;'s'
   182  0039  3473               	retlw	115	;'s'
   183  003A  3420               	retlw	32	;' '
   184  003B  3432               	retlw	50	;'2'
   185  003C  3420               	retlw	32	;' '
   186  003D  3452               	retlw	82	;'R'
   187  003E  3465               	retlw	101	;'e'
   188  003F  3476               	retlw	118	;'v'
   189  0040  3465               	retlw	101	;'e'
   190  0041  3472               	retlw	114	;'r'
   191  0042  3473               	retlw	115	;'s'
   192  0043  3465               	retlw	101	;'e'
   193  0044  3400               	retlw	0
   194  0045                     STR_3:	
   195  0045  3470               	retlw	112	;'p'
   196  0046  3472               	retlw	114	;'r'
   197  0047  3465               	retlw	101	;'e'
   198  0048  3473               	retlw	115	;'s'
   199  0049  3473               	retlw	115	;'s'
   200  004A  3420               	retlw	32	;' '
   201  004B  3433               	retlw	51	;'3'
   202  004C  3420               	retlw	32	;' '
   203  004D  3452               	retlw	82	;'R'
   204  004E  3465               	retlw	101	;'e'
   205  004F  3476               	retlw	118	;'v'
   206  0050  3465               	retlw	101	;'e'
   207  0051  3472               	retlw	114	;'r'
   208  0052  3473               	retlw	115	;'s'
   209  0053  3465               	retlw	101	;'e'
   210  0054  3400               	retlw	0
   211  0055                     STR_5:	
   212  0055  3470               	retlw	112	;'p'
   213  0056  3472               	retlw	114	;'r'
   214  0057  3465               	retlw	101	;'e'
   215  0058  3473               	retlw	115	;'s'
   216  0059  3473               	retlw	115	;'s'
   217  005A  3420               	retlw	32	;' '
   218  005B  3438               	retlw	56	;'8'
   219  005C  3420               	retlw	32	;' '
   220  005D  3473               	retlw	115	;'s'
   221  005E  3474               	retlw	116	;'t'
   222  005F  346F               	retlw	111	;'o'
   223  0060  3470               	retlw	112	;'p'
   224  0061  3400               	retlw	0
   225                           
   226                           	psect	cinit
   227  07FC                     start_initialization:	
   228                           ; #config settings
   229                           
   230  07FC                     __initialization:	
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:	
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2F5D   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_Lcd_cmd:	
   241  0070                     ??_Lcd_cmd:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_Lcd_data:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ??_Lcd_data:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?_Lcd_initial:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_Lcd_string:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_main:	
   257                           ; 1 bytes @ 0x0
   258                           
   259                           
   260                           ; 2 bytes @ 0x0
   261  0070                     	ds	1
   262  0071                     Lcd_cmd@c:	
   263  0071                     Lcd_data@d:	
   264                           ; 1 bytes @ 0x1
   265                           
   266                           
   267                           ; 1 bytes @ 0x1
   268  0071                     	ds	1
   269  0072                     ??_Lcd_initial:	
   270  0072                     ??_Lcd_string:	
   271                           ; 1 bytes @ 0x2
   272                           
   273                           
   274                           ; 1 bytes @ 0x2
   275  0072                     	ds	1
   276  0073                     Lcd_string@ptr:	
   277                           
   278                           ; 1 bytes @ 0x3
   279  0073                     	ds	1
   280  0074                     ??_main:	
   281  0074                     main@i:	
   282                           ; 1 bytes @ 0x4
   283                           
   284                           
   285                           ; 2 bytes @ 0x4
   286  0074                     	ds	2
   287                           
   288                           	psect	maintext
   289  075D                     __pmaintext:	
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 69 in file "LCD WITH PIC.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  i               2    4[COMMON] int 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  2   33[None  ] int 
   302 ;; Registers used:
   303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   309 ;;      Params:         0       0       0       0       0
   310 ;;      Locals:         2       0       0       0       0
   311 ;;      Temps:          0       0       0       0       0
   312 ;;      Totals:         2       0       0       0       0
   313 ;;Total ram usage:        2 bytes
   314 ;; Hardware stack levels required when called:    2
   315 ;; This function calls:
   316 ;;		_Lcd_cmd
   317 ;;		_Lcd_data
   318 ;;		_Lcd_initial
   319 ;;		_Lcd_string
   320 ;; This function is called by:
   321 ;;		Startup code after reset
   322 ;; This function uses a non-reentrant model
   323 ;;
   324                           
   325                           
   326                           ;psect for function _main
   327  075D                     _main:	
   328                           
   329                           ;LCD WITH PIC.c: 72: int i=0;;
   330                           
   331                           ;incstack = 0
   332                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   333  075D  01F4               	clrf	main@i
   334  075E  01F5               	clrf	main@i+1
   335                           
   336                           ;LCD WITH PIC.c: 73: TRISD=0x00;
   337  075F  1683               	bsf	3,5	;RP0=1, select bank1
   338  0760  1303               	bcf	3,6	;RP1=0, select bank1
   339  0761  0188               	clrf	8	;volatile
   340                           
   341                           ;LCD WITH PIC.c: 74: TRISC=0x00;
   342  0762  0187               	clrf	7	;volatile
   343                           
   344                           ;LCD WITH PIC.c: 75: TRISB=0xFF;
   345  0763  30FF               	movlw	255
   346  0764  0086               	movwf	6	;volatile
   347                           
   348                           ;LCD WITH PIC.c: 76: Lcd_initial();
   349  0765  120A  118A  26A4  120A  118A  	fcall	_Lcd_initial
   350                           
   351                           ;LCD WITH PIC.c: 77: Lcd_data('a');
   352  076A  3061               	movlw	97
   353  076B  120A  118A  26C7  120A  118A  	fcall	_Lcd_data
   354  0770                     l650:	
   355                           ;LCD WITH PIC.c: 80: while(1)
   356                           
   357                           
   358                           ;LCD WITH PIC.c: 81: {
   359                           ;LCD WITH PIC.c: 82: if((PORTB & 0X08)==0X08)
   360  0770  1283               	bcf	3,5	;RP0=0, select bank0
   361  0771  1303               	bcf	3,6	;RP1=0, select bank0
   362  0772  1D86               	btfss	6,3	;volatile
   363  0773  2F7C               	goto	l654
   364                           
   365                           ;LCD WITH PIC.c: 83: {
   366                           ;LCD WITH PIC.c: 84: i++;
   367  0774  3001               	movlw	1
   368  0775  07F4               	addwf	main@i,f
   369  0776  1803               	skipnc
   370  0777  0AF5               	incf	main@i+1,f
   371  0778  3000               	movlw	0
   372  0779  07F5               	addwf	main@i+1,f
   373  077A                     l36:	
   374                           ;LCD WITH PIC.c: 85: while((PORTB & 0x08)==0x08);
   375                           
   376  077A  1986               	btfsc	6,3	;volatile
   377  077B  2F7A               	goto	l36
   378  077C                     l654:	
   379                           
   380                           ;LCD WITH PIC.c: 86: }
   381                           ;LCD WITH PIC.c: 87: if (i==1)
   382  077C  0374               	decf	main@i,w
   383  077D  0475               	iorwf	main@i+1,w
   384  077E  1D03               	btfss	3,2
   385  077F  2F8E               	goto	l662
   386                           
   387                           ;LCD WITH PIC.c: 88: {
   388                           ;LCD WITH PIC.c: 89: PORTC=0X05;
   389  0780  3005               	movlw	5
   390  0781  0087               	movwf	7	;volatile
   391                           
   392                           ;LCD WITH PIC.c: 90: Lcd_cmd(0x80);
   393  0782  3080               	movlw	128
   394  0783  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   395                           
   396                           ;LCD WITH PIC.c: 91: Lcd_string("press 1 forward");
   397  0788  301D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   398  0789  120A  118A  2688  120A  118A  	fcall	_Lcd_string
   399  078E                     l662:	
   400                           
   401                           ;LCD WITH PIC.c: 92: }
   402                           ;LCD WITH PIC.c: 93: if (i==2)
   403  078E  3002               	movlw	2
   404  078F  0674               	xorwf	main@i,w
   405  0790  0475               	iorwf	main@i+1,w
   406  0791  1D03               	btfss	3,2
   407  0792  2FA9               	goto	l672
   408                           
   409                           ;LCD WITH PIC.c: 95: {
   410                           ;LCD WITH PIC.c: 96: PORTC=0X0a;
   411  0793  300A               	movlw	10
   412  0794  1283               	bcf	3,5	;RP0=0, select bank0
   413  0795  1303               	bcf	3,6	;RP1=0, select bank0
   414  0796  0087               	movwf	7	;volatile
   415                           
   416                           ;LCD WITH PIC.c: 97: Lcd_cmd(0x01);
   417  0797  3001               	movlw	1
   418  0798  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   419                           
   420                           ;LCD WITH PIC.c: 98: Lcd_cmd(0x80);
   421  079D  3080               	movlw	128
   422  079E  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   423                           
   424                           ;LCD WITH PIC.c: 99: Lcd_string ("press 2 Reverse");
   425  07A3  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   426  07A4  120A  118A  2688  120A  118A  	fcall	_Lcd_string
   427  07A9                     l672:	
   428                           
   429                           ;LCD WITH PIC.c: 101: }
   430                           ;LCD WITH PIC.c: 102: if (i==3)
   431  07A9  3003               	movlw	3
   432  07AA  0674               	xorwf	main@i,w
   433  07AB  0475               	iorwf	main@i+1,w
   434  07AC  1D03               	btfss	3,2
   435  07AD  2FC4               	goto	l682
   436                           
   437                           ;LCD WITH PIC.c: 104: {
   438                           ;LCD WITH PIC.c: 105: PORTC=0X09;
   439  07AE  3009               	movlw	9
   440  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   441  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   442  07B1  0087               	movwf	7	;volatile
   443                           
   444                           ;LCD WITH PIC.c: 106: Lcd_cmd(0x01);
   445  07B2  3001               	movlw	1
   446  07B3  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   447                           
   448                           ;LCD WITH PIC.c: 107: Lcd_cmd(0x80);
   449  07B8  3080               	movlw	128
   450  07B9  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   451                           
   452                           ;LCD WITH PIC.c: 108: Lcd_string ("press 3 Reverse");
   453  07BE  303D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   454  07BF  120A  118A  2688  120A  118A  	fcall	_Lcd_string
   455  07C4                     l682:	
   456                           
   457                           ;LCD WITH PIC.c: 110: }
   458                           ;LCD WITH PIC.c: 111: if (i==4)
   459  07C4  3004               	movlw	4
   460  07C5  0674               	xorwf	main@i,w
   461  07C6  0475               	iorwf	main@i+1,w
   462  07C7  1D03               	btfss	3,2
   463  07C8  2FDF               	goto	l692
   464                           
   465                           ;LCD WITH PIC.c: 113: {
   466                           ;LCD WITH PIC.c: 114: PORTC=0X06;
   467  07C9  3006               	movlw	6
   468  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   469  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   470  07CC  0087               	movwf	7	;volatile
   471                           
   472                           ;LCD WITH PIC.c: 115: Lcd_cmd(0x01);
   473  07CD  3001               	movlw	1
   474  07CE  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   475                           
   476                           ;LCD WITH PIC.c: 116: Lcd_cmd(0x80);
   477  07D3  3080               	movlw	128
   478  07D4  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   479                           
   480                           ;LCD WITH PIC.c: 117: Lcd_string ("press 4 first Reverse 2 nd ");
   481  07D9  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   482  07DA  120A  118A  2688  120A  118A  	fcall	_Lcd_string
   483  07DF                     l692:	
   484                           
   485                           ;LCD WITH PIC.c: 119: }
   486                           ;LCD WITH PIC.c: 120: if (i==5)
   487  07DF  3005               	movlw	5
   488  07E0  0674               	xorwf	main@i,w
   489  07E1  0475               	iorwf	main@i+1,w
   490  07E2  1D03               	btfss	3,2
   491  07E3  2F70               	goto	l650
   492                           
   493                           ;LCD WITH PIC.c: 122: {
   494                           ;LCD WITH PIC.c: 123: PORTC=0X00;
   495  07E4  1283               	bcf	3,5	;RP0=0, select bank0
   496  07E5  1303               	bcf	3,6	;RP1=0, select bank0
   497  07E6  0187               	clrf	7	;volatile
   498                           
   499                           ;LCD WITH PIC.c: 124: Lcd_cmd(0x01);
   500  07E7  3001               	movlw	1
   501  07E8  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   502                           
   503                           ;LCD WITH PIC.c: 125: Lcd_cmd(0x80);
   504  07ED  3080               	movlw	128
   505  07EE  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   506                           
   507                           ;LCD WITH PIC.c: 126: Lcd_string ("press 8 stop");
   508  07F3  304D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   509  07F4  120A  118A  2688  120A  118A  	fcall	_Lcd_string
   510                           
   511                           ;LCD WITH PIC.c: 128: i=0;
   512  07F9  01F4               	clrf	main@i
   513  07FA  01F5               	clrf	main@i+1
   514  07FB  2F70               	goto	l650
   515  07FC                     __end_of_main:	
   516                           
   517                           	psect	text1
   518  0688                     __ptext1:	
   519 ;; *************** function _Lcd_string *****************
   520 ;; Defined at:
   521 ;;		line 61 in file "LCD WITH PIC.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  ptr             1    wreg     PTR unsigned char 
   524 ;;		 -> STR_5(13), STR_4(28), STR_3(16), STR_2(16), 
   525 ;;		 -> STR_1(16), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  ptr             1    3[COMMON] PTR unsigned char 
   528 ;;		 -> STR_5(13), STR_4(28), STR_3(16), STR_2(16), 
   529 ;;		 -> STR_1(16), 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   539 ;;      Params:         0       0       0       0       0
   540 ;;      Locals:         1       0       0       0       0
   541 ;;      Temps:          1       0       0       0       0
   542 ;;      Totals:         2       0       0       0       0
   543 ;;Total ram usage:        2 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    1
   546 ;; This function calls:
   547 ;;		_Lcd_data
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _Lcd_string
   555  0688                     _Lcd_string:	
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _Lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   559                           ;Lcd_string@ptr stored from wreg
   560  0688  00F3               	movwf	Lcd_string@ptr
   561  0689                     l640:	
   562                           ;LCD WITH PIC.c: 63: while (*ptr!='\0')
   563                           
   564  0689  0873               	movf	Lcd_string@ptr,w
   565  068A  0084               	movwf	4
   566  068B  120A  118A  2003  120A  118A  	fcall	stringdir
   567  0690  3A00               	xorlw	0
   568  0691  1903               	btfsc	3,2
   569  0692  0008               	return
   570                           
   571                           ;LCD WITH PIC.c: 64: {
   572                           ;LCD WITH PIC.c: 65: Lcd_data(*ptr++);
   573  0693  0873               	movf	Lcd_string@ptr,w
   574  0694  0084               	movwf	4
   575  0695  120A  118A  2003  120A  118A  	fcall	stringdir
   576  069A  120A  118A  26C7  120A  118A  	fcall	_Lcd_data
   577  069F  3001               	movlw	1
   578  06A0  00F2               	movwf	??_Lcd_string
   579  06A1  0872               	movf	??_Lcd_string,w
   580  06A2  07F3               	addwf	Lcd_string@ptr,f
   581  06A3  2E89               	goto	l640
   582  06A4                     __end_of_Lcd_string:	
   583                           
   584                           	psect	text2
   585  06C7                     __ptext2:	
   586 ;; *************** function _Lcd_data *****************
   587 ;; Defined at:
   588 ;;		line 32 in file "LCD WITH PIC.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  d               1    wreg     unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  d               1    1[COMMON] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0
   604 ;;      Temps:          1       0       0       0       0
   605 ;;      Totals:         2       0       0       0       0
   606 ;;Total ram usage:        2 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_Lcd_string
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _Lcd_data
   618  06C7                     _Lcd_data:	
   619                           
   620                           ;incstack = 0
   621                           ; Regs used in _Lcd_data: [wreg+status,2+status,0]
   622                           ;Lcd_data@d stored from wreg
   623  06C7  00F1               	movwf	Lcd_data@d
   624                           
   625                           ;LCD WITH PIC.c: 34: PORTD=d&0xf0;
   626  06C8  0871               	movf	Lcd_data@d,w
   627  06C9  39F0               	andlw	240
   628  06CA  1283               	bcf	3,5	;RP0=0, select bank0
   629  06CB  1303               	bcf	3,6	;RP1=0, select bank0
   630  06CC  0088               	movwf	8	;volatile
   631                           
   632                           ;LCD WITH PIC.c: 35: PORTD|=0x01;
   633  06CD  1408               	bsf	8,0	;volatile
   634                           
   635                           ;LCD WITH PIC.c: 36: PORTD&=~0x02;
   636  06CE  30FD               	movlw	253
   637  06CF  00F0               	movwf	??_Lcd_data
   638  06D0  0870               	movf	??_Lcd_data,w
   639  06D1  0588               	andwf	8,f	;volatile
   640                           
   641                           ;LCD WITH PIC.c: 37: PORTD|=0x04;
   642  06D2  1508               	bsf	8,2	;volatile
   643                           
   644                           ;LCD WITH PIC.c: 38: _delay((unsigned long)((5)*(1000000/4000.0)));
   645  06D3  30F9               	movlw	249
   646  06D4  00F0               	movwf	??_Lcd_data
   647  06D5                     u197:	
   648  06D5  2ED6               	nop2
   649  06D6  0BF0               	decfsz	??_Lcd_data,f
   650  06D7  2ED5               	goto	u197
   651  06D8  2ED9               	nop2
   652  06D9  2EDA               	nop2
   653                           
   654                           ;LCD WITH PIC.c: 39: PORTD&=~0x04;
   655  06DA  30FB               	movlw	251
   656  06DB  00F0               	movwf	??_Lcd_data
   657  06DC  0870               	movf	??_Lcd_data,w
   658  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   659  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   660  06DF  0588               	andwf	8,f	;volatile
   661                           
   662                           ;LCD WITH PIC.c: 40: _delay((unsigned long)((5)*(1000000/4000.0)));
   663  06E0  30F9               	movlw	249
   664  06E1  00F0               	movwf	??_Lcd_data
   665  06E2                     u207:	
   666  06E2  2EE3               	nop2
   667  06E3  0BF0               	decfsz	??_Lcd_data,f
   668  06E4  2EE2               	goto	u207
   669  06E5  2EE6               	nop2
   670  06E6  2EE7               	nop2
   671                           
   672                           ;LCD WITH PIC.c: 42: PORTD=d<<4;
   673  06E7  0871               	movf	Lcd_data@d,w
   674  06E8  00F0               	movwf	??_Lcd_data
   675  06E9  3003               	movlw	3
   676  06EA                     u25:	
   677  06EA  1003               	clrc
   678  06EB  0DF0               	rlf	??_Lcd_data,f
   679  06EC  3EFF               	addlw	-1
   680  06ED  1D03               	skipz
   681  06EE  2EEA               	goto	u25
   682  06EF  1003               	clrc
   683  06F0  0D70               	rlf	??_Lcd_data,w
   684  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   685  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   686  06F3  0088               	movwf	8	;volatile
   687                           
   688                           ;LCD WITH PIC.c: 43: PORTD|=0x01;
   689  06F4  1408               	bsf	8,0	;volatile
   690                           
   691                           ;LCD WITH PIC.c: 44: PORTD&=~0x02;
   692  06F5  30FD               	movlw	253
   693  06F6  00F0               	movwf	??_Lcd_data
   694  06F7  0870               	movf	??_Lcd_data,w
   695  06F8  0588               	andwf	8,f	;volatile
   696                           
   697                           ;LCD WITH PIC.c: 45: PORTD|=0x04;
   698  06F9  1508               	bsf	8,2	;volatile
   699                           
   700                           ;LCD WITH PIC.c: 46: _delay((unsigned long)((5)*(1000000/4000.0)));
   701  06FA  30F9               	movlw	249
   702  06FB  00F0               	movwf	??_Lcd_data
   703  06FC                     u217:	
   704  06FC  2EFD               	nop2
   705  06FD  0BF0               	decfsz	??_Lcd_data,f
   706  06FE  2EFC               	goto	u217
   707  06FF  2F00               	nop2
   708  0700  2F01               	nop2
   709                           
   710                           ;LCD WITH PIC.c: 47: PORTD&=~0x04;
   711  0701  30FB               	movlw	251
   712  0702  00F0               	movwf	??_Lcd_data
   713  0703  0870               	movf	??_Lcd_data,w
   714  0704  1283               	bcf	3,5	;RP0=0, select bank0
   715  0705  1303               	bcf	3,6	;RP1=0, select bank0
   716  0706  0588               	andwf	8,f	;volatile
   717                           
   718                           ;LCD WITH PIC.c: 48: _delay((unsigned long)((5)*(1000000/4000.0)));
   719  0707  30F9               	movlw	249
   720  0708  00F0               	movwf	??_Lcd_data
   721  0709                     u227:	
   722  0709  2F0A               	nop2
   723  070A  0BF0               	decfsz	??_Lcd_data,f
   724  070B  2F09               	goto	u227
   725  070C  2F0D               	nop2
   726  070D  2F0E               	nop2
   727  070E  0008               	return
   728  070F                     __end_of_Lcd_data:	
   729                           
   730                           	psect	text3
   731  06A4                     __ptext3:	
   732 ;; *************** function _Lcd_initial *****************
   733 ;; Defined at:
   734 ;;		line 52 in file "LCD WITH PIC.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0
   751 ;;      Totals:         0       0       0       0       0
   752 ;;Total ram usage:        0 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    1
   755 ;; This function calls:
   756 ;;		_Lcd_cmd
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _Lcd_initial
   764  06A4                     _Lcd_initial:	
   765                           
   766                           ;LCD WITH PIC.c: 54: Lcd_cmd(0x02);
   767                           
   768                           ;incstack = 0
   769                           ; Regs used in _Lcd_initial: [wreg+status,2+status,0+pclath+cstack]
   770  06A4  3002               	movlw	2
   771  06A5  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   772                           
   773                           ;LCD WITH PIC.c: 55: Lcd_cmd(0x28);
   774  06AA  3028               	movlw	40
   775  06AB  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   776                           
   777                           ;LCD WITH PIC.c: 56: Lcd_cmd(0x0c);
   778  06B0  300C               	movlw	12
   779  06B1  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   780                           
   781                           ;LCD WITH PIC.c: 57: Lcd_cmd(0x06);
   782  06B6  3006               	movlw	6
   783  06B7  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   784                           
   785                           ;LCD WITH PIC.c: 58: Lcd_cmd(0x01);
   786  06BC  3001               	movlw	1
   787  06BD  120A  118A  270F  120A  118A  	fcall	_Lcd_cmd
   788                           
   789                           ;LCD WITH PIC.c: 59: Lcd_cmd(0x80);
   790  06C2  3080               	movlw	128
   791  06C3  120A  118A  270F   	fcall	_Lcd_cmd
   792  06C6  0008               	return
   793  06C7                     __end_of_Lcd_initial:	
   794                           
   795                           	psect	text4
   796  070F                     __ptext4:	
   797 ;; *************** function _Lcd_cmd *****************
   798 ;; Defined at:
   799 ;;		line 13 in file "LCD WITH PIC.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  c               1    wreg     unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  c               1    1[COMMON] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         1       0       0       0       0
   815 ;;      Temps:          1       0       0       0       0
   816 ;;      Totals:         2       0       0       0       0
   817 ;;Total ram usage:        2 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_Lcd_initial
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _Lcd_cmd
   829  070F                     _Lcd_cmd:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _Lcd_cmd: [wreg+status,2+status,0]
   833                           ;Lcd_cmd@c stored from wreg
   834  070F  00F1               	movwf	Lcd_cmd@c
   835                           
   836                           ;LCD WITH PIC.c: 15: PORTD=c&0xf0;
   837  0710  0871               	movf	Lcd_cmd@c,w
   838  0711  39F0               	andlw	240
   839  0712  1283               	bcf	3,5	;RP0=0, select bank0
   840  0713  1303               	bcf	3,6	;RP1=0, select bank0
   841  0714  0088               	movwf	8	;volatile
   842                           
   843                           ;LCD WITH PIC.c: 16: PORTD&=~0x01;
   844  0715  30FE               	movlw	254
   845  0716  00F0               	movwf	??_Lcd_cmd
   846  0717  0870               	movf	??_Lcd_cmd,w
   847  0718  0588               	andwf	8,f	;volatile
   848                           
   849                           ;LCD WITH PIC.c: 17: PORTD&=~0x02;
   850  0719  30FD               	movlw	253
   851  071A  00F0               	movwf	??_Lcd_cmd
   852  071B  0870               	movf	??_Lcd_cmd,w
   853  071C  0588               	andwf	8,f	;volatile
   854                           
   855                           ;LCD WITH PIC.c: 18: PORTD|=0x04;
   856  071D  1508               	bsf	8,2	;volatile
   857                           
   858                           ;LCD WITH PIC.c: 19: _delay((unsigned long)((5)*(1000000/4000.0)));
   859  071E  30F9               	movlw	249
   860  071F  00F0               	movwf	??_Lcd_cmd
   861  0720                     u237:	
   862  0720  2F21               	nop2
   863  0721  0BF0               	decfsz	??_Lcd_cmd,f
   864  0722  2F20               	goto	u237
   865  0723  2F24               	nop2
   866  0724  2F25               	nop2
   867                           
   868                           ;LCD WITH PIC.c: 20: PORTD&=~0x04;
   869  0725  30FB               	movlw	251
   870  0726  00F0               	movwf	??_Lcd_cmd
   871  0727  0870               	movf	??_Lcd_cmd,w
   872  0728  1283               	bcf	3,5	;RP0=0, select bank0
   873  0729  1303               	bcf	3,6	;RP1=0, select bank0
   874  072A  0588               	andwf	8,f	;volatile
   875                           
   876                           ;LCD WITH PIC.c: 21: _delay((unsigned long)((5)*(1000000/4000.0)));
   877  072B  30F9               	movlw	249
   878  072C  00F0               	movwf	??_Lcd_cmd
   879  072D                     u247:	
   880  072D  2F2E               	nop2
   881  072E  0BF0               	decfsz	??_Lcd_cmd,f
   882  072F  2F2D               	goto	u247
   883  0730  2F31               	nop2
   884  0731  2F32               	nop2
   885                           
   886                           ;LCD WITH PIC.c: 23: PORTD=c<<4;
   887  0732  0871               	movf	Lcd_cmd@c,w
   888  0733  00F0               	movwf	??_Lcd_cmd
   889  0734  3003               	movlw	3
   890  0735                     u15:	
   891  0735  1003               	clrc
   892  0736  0DF0               	rlf	??_Lcd_cmd,f
   893  0737  3EFF               	addlw	-1
   894  0738  1D03               	skipz
   895  0739  2F35               	goto	u15
   896  073A  1003               	clrc
   897  073B  0D70               	rlf	??_Lcd_cmd,w
   898  073C  1283               	bcf	3,5	;RP0=0, select bank0
   899  073D  1303               	bcf	3,6	;RP1=0, select bank0
   900  073E  0088               	movwf	8	;volatile
   901                           
   902                           ;LCD WITH PIC.c: 24: PORTD&=~0x01;
   903  073F  30FE               	movlw	254
   904  0740  00F0               	movwf	??_Lcd_cmd
   905  0741  0870               	movf	??_Lcd_cmd,w
   906  0742  0588               	andwf	8,f	;volatile
   907                           
   908                           ;LCD WITH PIC.c: 25: PORTD&=~0x02;
   909  0743  30FD               	movlw	253
   910  0744  00F0               	movwf	??_Lcd_cmd
   911  0745  0870               	movf	??_Lcd_cmd,w
   912  0746  0588               	andwf	8,f	;volatile
   913                           
   914                           ;LCD WITH PIC.c: 26: PORTD|=0x04;
   915  0747  1508               	bsf	8,2	;volatile
   916                           
   917                           ;LCD WITH PIC.c: 27: _delay((unsigned long)((5)*(1000000/4000.0)));
   918  0748  30F9               	movlw	249
   919  0749  00F0               	movwf	??_Lcd_cmd
   920  074A                     u257:	
   921  074A  2F4B               	nop2
   922  074B  0BF0               	decfsz	??_Lcd_cmd,f
   923  074C  2F4A               	goto	u257
   924  074D  2F4E               	nop2
   925  074E  2F4F               	nop2
   926                           
   927                           ;LCD WITH PIC.c: 28: PORTD&=~0x04;
   928  074F  30FB               	movlw	251
   929  0750  00F0               	movwf	??_Lcd_cmd
   930  0751  0870               	movf	??_Lcd_cmd,w
   931  0752  1283               	bcf	3,5	;RP0=0, select bank0
   932  0753  1303               	bcf	3,6	;RP1=0, select bank0
   933  0754  0588               	andwf	8,f	;volatile
   934                           
   935                           ;LCD WITH PIC.c: 29: _delay((unsigned long)((5)*(1000000/4000.0)));
   936  0755  30F9               	movlw	249
   937  0756  00F0               	movwf	??_Lcd_cmd
   938  0757                     u267:	
   939  0757  2F58               	nop2
   940  0758  0BF0               	decfsz	??_Lcd_cmd,f
   941  0759  2F57               	goto	u267
   942  075A  2F5B               	nop2
   943  075B  2F5C               	nop2
   944  075C  0008               	return
   945  075D                     __end_of_Lcd_cmd:	
   946  007E                     btemp	set	126	;btemp
   947  007E                     wtemp0	set	126


Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_string@ptr	PTR unsigned char  size(1) Largest target is 28
		 -> STR_5(CODE[13]), STR_4(CODE[28]), STR_3(CODE[16]), STR_2(CODE[16]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_string
    _Lcd_string->_Lcd_data
    _Lcd_initial->_Lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     413
                                              4 COMMON     2     2      0
                            _Lcd_cmd
                           _Lcd_data
                        _Lcd_initial
                         _Lcd_string
 ---------------------------------------------------------------------------------
 (1) _Lcd_string                                           2     2      0     210
                                              2 COMMON     2     2      0
                           _Lcd_data
 ---------------------------------------------------------------------------------
 (2) _Lcd_data                                             2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_initial                                          0     0      0      30
                            _Lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_cmd                                              2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_cmd
   _Lcd_data
   _Lcd_initial
     _Lcd_cmd
   _Lcd_string
     _Lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun May 01 11:44:17 2022

                      pc 0002                       l36 077A                       u15 0735  
                     u25 06EA                       fsr 0004                      l640 0689  
                    l650 0770                      l662 078E                      l654 077C  
                    l672 07A9                      l682 07C4                      l692 07DF  
                    u207 06E2                      u217 06FC                      u227 0709  
                    u237 0720                      u247 072D                      u257 074A  
                    u267 0757                      u197 06D5                      fsr0 0004  
                   STR_1 0025                     STR_2 0035                     STR_3 0045  
                   STR_4 0009                     STR_5 0055                     _main 075D  
                   btemp 007E                     start 0000          __end_of_Lcd_cmd 075D  
    __end_of_Lcd_initial 06C7                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088               _Lcd_string 0688  
                  main@i 0074                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_Lcd_data 070F          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0074                ??_Lcd_cmd 0070  
            _Lcd_initial 06A4              ?_Lcd_string 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_Lcd_data 0070               __pmaintext 075D  
    __size_of_Lcd_string 001C               ??_Lcd_data 0070               __stringtab 0003  
                _Lcd_cmd 070F                  __ptext1 0688                  __ptext2 06C7  
                __ptext3 06A4                  __ptext4 070F     end_of_initialization 07FC  
           ?_Lcd_initial 0070                Lcd_data@d 0071             ??_Lcd_string 0072  
     __end_of_Lcd_string 06A4      start_initialization 07FC        __size_of_Lcd_data 0048  
              ___latbits 0002                 ?_Lcd_cmd 0070     __size_of_Lcd_initial 0023  
              __pstrings 0003                 Lcd_cmd@c 0071              __stringbase 0008  
               _Lcd_data 06C7         __size_of_Lcd_cmd 004E       __end_of__stringtab 0009  
          __size_of_main 009F            Lcd_string@ptr 0073                stringcode 0003  
               stringdir 0003                 stringtab 0003            ??_Lcd_initial 0072  
